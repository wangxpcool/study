tb2fe  operation 

自我介绍开始：

大家好我叫王学平，四川南充人，17年毕业于江苏淮阴工学院，大学专业是计算机科学与技术，
16年开始在上海实习java开发，毕业后一直从事java开发工作，

最近一份工作是负责汇添富基金的固收投管项目的维护与开发
业务上包括 国债冲抵期货保证金 一级债发行分销 固收交易日报模块
国债冲抵期货保证金业务
主要是用客户的国债余额 去冲抵期货保证金的业务，包含交存与提取两大块。
包括流程引导、自动节点等
因为业务上的复杂采用了大量的枚举展示状态：交存确认、提取确认，各种失败，期货公司确认失败等状态。
一级债发行分销
对一级债发行分销流程进行优化，比如债券重新发行之前是手动去修改数据，引导为程序自动重新发行，销毁旧债券，发行新债券
固收交易日报
展示固收产品交易与持仓变化
展示长债利率与短债利率变化，因为这个利差可以体现当前经济预期和市场风险


技术上的话，使用的常规的spring cloud体系架构，多数据源，主要使用的还是oracle
五大组件
eureka 注册中心
网关gateway
熔断hystrix
配置中心 appollo
服务负载均衡 ribbon
服务间调用feign

兴业银行

兴业银行资产托管依托金融科技，全面承载合同审核、账户管理、产品管理、清算交收、核算估值、信息披露等一站式托管服务。
主要客户有三种 aka账户体系：托管人，委托人，管理人
合同审核，账户管理、产品管理
账户管理 ，包括后面的优先级设置

资产托管部，和别的部门，还有管理员优先级也更高

负责全行托管业务产品同步，采用三种时间维度上的同步策略：实时同步、日终同步、每周全量同步
还包括后面的产品下线 同步

国债冲抵期货保证金业务的流程维护
涉及到很多流程管理
申请提交，审核，不同角色，制作申请表，o32流水冻券，邮件外发，通知期货公司，根据期货公司的返回确认结果，判断交存是否成功并进行归档，
如果失败则解冻冻券，释放可用金额。
如果交存成功了进入下个流程，提取，又走一遍审核，邮件外发，结果确认，释放解冻。
后面项目上线的时候是我负责ppt讲解介绍给三部门人员的



负责每日汇总固收交易日报
主要问题在数据收集上，多方数据源采集，比如财汇，交易等系统。存在问题比如财汇系统数据更新不及时。如果数据没更新完毕，任务需继续执行，
等待数据完全更新完毕，采集数据可能还需要区分债券code和跨交易市场债券。
数据处理展示，比如展示日经 标普，涉及到日期问题，比如有些日期美股没开市，展示上个交易日数据
根据交易量，持仓量筛选topN进行展示。

重构了类似 jenkins 的自动化部署平台
jenkins部署时是有一个日志实时滚动打印，为实现这个功能，采用了与jenkins同样的机制，将日志写入临时文件，前台去查询增量更新文件，效果很酷炫
如果程序启动失败，会在ssh命令上有返回结果。


一级债需求更新
因为原系统成熟且庞大，我们在不动原有表结构基础上，新增新的逻辑，比如新增债券扩展表，使用异步多线程机制，在原有业务完成后，新增新的逻辑，
并更新新的扩展表。这样再怎么改也不会影响到原有系统逻辑。
比如债券重新发行，之前是不支持的，需业务人员手动增删债券数据，为改造这个，新增债券是否重新发行标识，重新发现之后，将目前现有债券更换成旧债券，
重新走一遍发行流程，引入原有债券代码。



简历点：
Kafka 进行流式计算
不同数据表同步时间不一致，比如利率债，信用债和存单，债券类型不一样的数据，
使用定时任务对当日债券数据count变化，如果新增了，对增量数据发送至kafka
kafka合并多个数据源的债券数据，
如果用户在网页上查看当日日报了，就直接查kafka数据。
如果数据当日整合完成，我们这边生成pdf日报，存库中。


kafka的一些面试题：
todo

保证金业务
校验：
比如交存在期货公司和营运端这边都确认了，那么可以直接归档。
或者O32系统冻券失败了，后台会自动刷新冻券状态。最终成功了的话，进入下个流程

一级债：
比如分类信用债，放松限制，让它在标位填报后，可继续进行新增标位
jvm 性能监控调优：因服务内存较大，更换为 G1 GC 。调整了一些参数:
比如堆内存大小
-xms -xmx 初始化堆内存。最大堆内存

最大GC暂停时间（MaxGCPauseMillis）**是调优的核心参数之一
比如划分region 也不怎么需要改，他是默认内存/2000

jenkins 实现方案，前端不断轮询
，备选方案，http长连接，websocket


多个原因吧：趁着经济下行休息了一段时间，证券业这边薪资预算没之前高，有朋友两次内推我进半导体行业都被hr卡经验了


采用分表策略将大表按时间维度进行分区存储
这个可能问，如何设置策略呢，了解下

需同步爬取中金公司的期货公司数据


ES存储引擎，利用倒排索引
数据库全文索引？？？

泛型面试！！



eureka 注册中心
网关gateway
熔断hystrix
服务负载均衡 ribbon
服务间调用feign


负载均衡算法

1.	静态算法：包括轮询法、随机法、源地址哈希法、一致性哈希法、加权轮询法和加权随机法。这些算法在负载均衡器启动时确定，不随服务器状态变化而变化。
2.	动态算法：包括最少连接数法和最快响应时间法。这些算法根据服务器的实时负载和性能动态调整请求分配。
具体负载均衡算法的介绍
1.	轮询法（Round Robin）：将请求按顺序分配给服务器，适合服务器性能相近的情况。每个请求按顺序分配给不同的服务器，从1至N然后重新开始。
2.	随机法（Random）：将请求随机分配到各个服务器，虽然理论上可以平均分配请求，但实际效果可能受服务器性能影响。
3.	源地址哈希法（Source Address Hash）：使用客户端IP地址进行哈希计算，将请求分配到固定的服务器上，适用于需要保持会话的场景。
4.	加权轮询法（Weighted Round Robin）：根据服务器的处理能力或负载情况分配权重，权重高的服务器处理更多请求，适用于服务器性能差异较大的情况。
5.	最少连接数法（Least Connections）：将新的请求发送到连接数最少的服务实例，适用于连接数差异较大的情况。
6.	最快响应时间法（Least Response Time）：将请求发送到响应时间最快的服务器，适用于需要快速响应的场景。



问到一个服务熔断 服务降级呢
什么情况下降级：
服务超时； 服务发生异常；服务熔断触发降级；线程池打满也会触发降级
熔断恢复

流程：服务降级，进而熔断 -服务恢复

压测
jmeter	

保证接口幂等性
1请求时，给个uuid，缓存在redis中，第二次请求时，可判断请求是否重复了
2数据库约束，新增时新增了重复的订单，那自动报错
3幂等字段，就是检查订单状态是否已经改变
4分布式锁。保证资源竞争安全


sql
优化索引：
子查询没加条件，将查询条件位置优化，比如如果查询临时表时，可以经过条件筛选一部分，那可大大增加查询效率
设计前没考虑太多，只设置了主键索引，但后面查询条件越来越多，查询没有覆盖索引，所以可以新增常用查询字段的索引，让其覆盖索引。
遵循索引最左原则。

针对历史交易数据，采用分表策略将大表按时间维度进行分区存储，有效提高查询效率
针对热门产品的查询。很简单，创建一个定时任务，每天执行一次，将临期的当天数据放到另外一个表。


