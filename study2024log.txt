spring bean的生命周期
redisson实现 分布式锁

有空再实现一下Apollo  xxljob

怎么去实现多数据源

websoket
http的返回值

设计模式的状态模式
spring 事件发布

xxljob 可以很好地使用分片功能，通过ShardingUtil.getShardingVo
vo.getindex  gettotal获取分片信息

线程池状态
java模板 工厂设计模式 
模板策略

整理下自我介绍 和项目

数据库

interrupt
事务失效场景 索引失效场景

tidb

单例模式
懒汉
系统一开始就创建
饿汉
调用时才创建
双检锁
使用valitale关键字 保证创建时线程安全
静态内部类
//使用静态内部类实现单例模式--线程安全
class SingletonStaticInner {
	private SingletonStaticInner() {
		
	}
	private static class SingletonInner {
		private static SingletonStaticInner singletonStaticInner = new SingletonStaticInner();
	}
	public static SingletonStaticInner getInstance() {
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return SingletonInner.singletonStaticInner;
	}
}
调用内部类时才会创建内部类的实例

统一处理异常
自定义继承自runtimeException的异常类



你好我叫王学平，四川南充人，17年毕业于江苏淮阴工学院，大学专业是计算机科学与技术，
16年开始在上海实习java开发，毕业后一直从事java开发工作，最近一份工作是负责汇添富基金的固收投管项目的维护与开发
这边业务上都是基于公司固收产品的管理和流程操作。比如之前负责的国债冲抵期货保证金业务
技术上的话，使用的常规的spring cloud体系架构，多数据源，主要使用的还是oracle

国债冲抵期货保证金业务的流程维护
涉及到很多流程管理
申请提交，审核，不同角色，制作申请表，o32流水冻券，邮件外发，通知期货公司，根据期货公司的返回确认结果，判断交存是否成功并进行归档，
如果失败则解冻冻券，释放可用金额。
如果交存成功了进入下个流程，提取，又走一遍审核，邮件外发，结果确认，释放解冻。

负责每日汇总固收交易日报
主要问题在数据收集上，多方数据源采集，比如财汇，交易等系统。存在问题比如财汇系统数据更新不及时。如果数据没更新完毕，任务需继续执行，
等待数据完全更新完毕，采集数据可能还需要区分债券code和跨交易市场债券。
数据处理展示，比如展示日经 标普，涉及到日期问题，比如有些日期美股没开市，展示上个交易日数据
根据交易量，持仓量筛选topN进行展示。

重构了类似 jenkins 的自动化部署平台
jenkins部署时是有一个日志实时滚动打印，为实现这个功能，采用了与jenkins同样的机制，将日志写入临时文件，前台去查询增量更新文件，效果很酷炫
如果程序启动失败，会在ssh命令上有返回结果。


一级债需求更新
因为原系统成熟且庞大，我们在不动原有表结构基础上，新增新的逻辑，比如新增债券扩展表，使用异步多线程机制，在原有业务完成后，新增新的逻辑，
并更新新的扩展表。这样再怎么改也不会影响到原有系统逻辑。

hashmap put方法

innodb 底层数据结构


分布式事务  三段提交 

分布式锁  业务超时后，锁失效了咋办



精通一下数据库 
Java内存分析工具MAT(Memory Analyzer Tool)

把知识点自成体系 ，增加表达能力


先看下这个pdf 总统的看一遍，然后再深入一些其他陌生点的东西比如 没遇到的，源码，mq,

复习下 设计模式的  数据库底层

数据库分库分表 

mysql 索引下推


今天不能玩了，补下sql 写下简单算法，单例爬楼梯 12 共有多少种可能 快排 看下？

整理下循环依赖

了解redis cluster 

哨兵 集群 

总结下项目问题

看看 spring  mq 设计模式 算法


sudo docker run -d --name wekan -p 3010:8080  wekanteam/wekan
netsh winsock reset


1.Java面向什么？
2.jvm内存区域有哪些
3.jvm运行时内存
4.垃圾回收的算法有哪些
5.Java中四种引用类型
6.gc垃圾回收器有哪些
7. io与nio的不同之处
8.Java的类加载机制
9. 详细说明双亲委派机制
10.tomcat是如何打破双亲委派机制的
11.List中Vector ArrayList LinkedList底层实现分别是什么
12.HashSet TreeSet LinkedHashSet的底层是是什么
13.CurrentHashMap 是如何实现线程安全的
14. 有哪些创建线程的方式
15.四种线程池分别是什么
16.线程的生命周期是什么
17.如何终止线程
18.sleep和wait有何区别
19.start和run 有何区别
20.Java中有哪些锁机制
21.synchronize的作用和核心实现分别是什么
22.线程中有什么方法
23.线程上下文是如何切换的
24.什么是CAS，什么是AQS
25.JAVA异常的分类，分别举出有哪些常见的异常
26. Java中反射有什么作用，好处是什么
27.Java中注解是如何使用的，自己写过注解吗
28.内部类是什么
29.泛型是什么
30.Java序列化的目的
31.cookie和session是什么意思，分别有什么作用
32.转发和重定向有什么区别
33.jsp中四个作用域以及9种内置对象（这题建议不用看了，jsp这种技术已经过时，现在主要是前后端分离的天下）
34.spring有什么特点
35.spring的核心组件有哪些，你用过哪些常用模块，包，和注解
36.spring ioc的原理
37.spring bean的作用域，生命周期以及依赖注入的四种方式
38.spring aop是神马意思
39.springmvc的工作流程
40.springboot的原理（？？？我有点蒙蔽或许这题想问什么是springboot？）